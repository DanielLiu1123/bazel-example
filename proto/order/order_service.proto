syntax = "proto3";

package order;

import "proto/order/order.proto";
import "proto/common/errors.proto";
import "proto/common/pagination.proto";

option java_package = "com.example.order";
option java_outer_classname = "OrderServiceProto";
option go_package = "github.com/example/bazel-example/proto/order";

// Order service definition
service OrderService {
  // Create a new order
  rpc CreateOrder(CreateOrderRequest) returns (CreateOrderResponse);
  
  // Get order by ID
  rpc GetOrder(GetOrderRequest) returns (GetOrderResponse);
  
  // Update order status
  rpc UpdateOrderStatus(UpdateOrderStatusRequest) returns (UpdateOrderStatusResponse);
  
  // Cancel order
  rpc CancelOrder(CancelOrderRequest) returns (CancelOrderResponse);
  
  // List orders for a user
  rpc ListUserOrders(ListUserOrdersRequest) returns (ListUserOrdersResponse);
  
  // List all orders (admin)
  rpc ListOrders(ListOrdersRequest) returns (ListOrdersResponse);
}

// Request/Response messages
message GetOrderRequest {
  string id = 1;
}

message GetOrderResponse {
  Order order = 1;
  common.Error error = 2;
}

message CreateOrderResponse {
  Order order = 1;
  common.Error error = 2;
}

message UpdateOrderStatusRequest {
  string id = 1;
  OrderStatus status = 2;
}

message UpdateOrderStatusResponse {
  Order order = 1;
  common.Error error = 2;
}

message CancelOrderRequest {
  string id = 1;
  string reason = 2;
}

message CancelOrderResponse {
  bool success = 1;
  common.Error error = 2;
}

message ListUserOrdersRequest {
  string user_id = 1;
  common.PageRequest page_request = 2;
}

message ListUserOrdersResponse {
  repeated Order orders = 1;
  common.PageResponse page_response = 2;
  common.Error error = 3;
}

message ListOrdersRequest {
  common.PageRequest page_request = 1;
  OrderStatus status_filter = 2; // Optional status filter
}

message ListOrdersResponse {
  repeated Order orders = 1;
  common.PageResponse page_response = 2;
  common.Error error = 3;
}
